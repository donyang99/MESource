<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>