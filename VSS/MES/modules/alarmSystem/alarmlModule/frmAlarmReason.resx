<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="actionAlarmReason.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        fwA=
</value>
  </data>
</root>